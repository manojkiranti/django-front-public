{"version":3,"file":"useOtpModal-C2ttznJp.js","sources":["../../src/components/Elements/OtpModal/index.tsx","../../src/hooks/useOtpModal.tsx"],"sourcesContent":["// components/OtpModal.tsx\nimport React, { useState } from 'react';\nimport { Modal, Input, Button, message } from 'antd';\n\ninterface OtpModalProps {\n  visible: boolean;\n  onCancel: () => void;\n  onVerify: (otp: string) => Promise<void>;\n}\n\nconst OtpModal: React.FC<OtpModalProps> = ({ visible, onCancel, onVerify }) => {\n  const [otp, setOtp] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleVerify = async () => {\n    if (!otp) {\n      message.error('Please enter the OTP.');\n      return;\n    }\n    setLoading(true);\n    try {\n      await onVerify(otp);\n      setOtp('');\n    } catch (error) {\n      // Handle verification error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Modal\n      title=\"Enter OTP\"\n      visible={visible}\n      onCancel={onCancel}\n      footer={[\n        <Button key=\"cancel\" onClick={onCancel}>\n          Cancel\n        </Button>,\n        <Button key=\"verify\" type=\"primary\" onClick={handleVerify} loading={loading}>\n          Verify\n        </Button>,\n      ]}\n    >\n      <Input.OTP\n\n        value={otp}\n        onChange={(text) => setOtp(text)}\n        length={6}\n      />\n    </Modal>\n  );\n};\n\nexport default OtpModal;\n","// hooks/useOtpModal.ts\nimport { useState } from 'react';\nimport { message } from 'antd';\nimport { OtpModal } from '@/components/Elements';\nimport { useServiceOtpVerifyMutation } from '@/store/apis/coreApi';\nimport { displayError } from '@/utils/displayMessageUtils';\n\ninterface UseOtpModalProps {\n\n  serviceId: string | null;\n  refNumber: string | null;\n  handleServiceSubmission: () => void;\n}\n\nconst useOtpModal = ({ serviceId, handleServiceSubmission, refNumber }: UseOtpModalProps) => {\n  const [visible, setVisible] = useState<boolean>(false);\n  const [verifyOtp, {isLoading:OtpVerifyLoading}] = useServiceOtpVerifyMutation();\n\n  const showModal = () => setVisible(true);\n  const hideModal = () => setVisible(false);\n\n  const handleVerify = async (otp: string) => {\n    try {\n      const response = await verifyOtp({otp:otp, service_type: serviceId as string ,ref_number: refNumber as string}).unwrap();\n      message.success(response.message);\n      hideModal();\n      handleServiceSubmission();\n    } catch (error: any) {\n      displayError(error)\n      // message.error(error.message || 'OTP verification failed.');\n    }\n  };\n\n  const OtpModalComponent = (\n    <OtpModal visible={visible} onCancel={hideModal} onVerify={handleVerify} />\n    \n  );\n\n  return { showModal, OtpModalComponent };\n};\n\nexport default useOtpModal;\n"],"names":["OtpModal","visible","onCancel","onVerify","otp","setOtp","useState","loading","setLoading","handleVerify","message","jsx","Modal","Button","Input","text","useOtpModal","serviceId","handleServiceSubmission","refNumber","setVisible","verifyOtp","OtpVerifyLoading","useServiceOtpVerifyMutation","showModal","hideModal","response","error","displayError"],"mappings":"4HAUA,MAAMA,EAAoC,CAAC,CAAE,QAAAC,EAAS,SAAAC,EAAU,SAAAC,KAAe,CAC7E,KAAM,CAACC,EAAKC,CAAM,EAAIC,WAAiB,EAAE,EACnC,CAACC,EAASC,CAAU,EAAIF,WAAkB,EAAK,EAE/CG,EAAe,SAAY,CAC/B,GAAI,CAACL,EAAK,CACRM,EAAQ,MAAM,uBAAuB,EACrC,MACF,CACAF,EAAW,EAAI,EACX,GAAA,CACF,MAAML,EAASC,CAAG,EAClBC,EAAO,EAAE,OACK,CAAA,QAEd,CACAG,EAAW,EAAK,CAClB,CAAA,EAIA,OAAAG,EAAA,IAACC,EAAA,CACC,MAAM,YACN,QAAAX,EACA,SAAAC,EACA,OAAQ,CACLS,EAAA,IAAAE,EAAA,CAAoB,QAASX,EAAU,mBAA5B,QAEZ,EACAS,EAAAA,IAACE,GAAoB,KAAK,UAAU,QAASJ,EAAc,QAAAF,EAAkB,mBAAjE,QAEZ,CACF,EAEA,SAAAI,EAAA,IAACG,EAAM,IAAN,CAEC,MAAOV,EACP,SAAWW,GAASV,EAAOU,CAAI,EAC/B,OAAQ,CAAA,CACV,CAAA,CAAA,CAGN,ECtCMC,EAAc,CAAC,CAAE,UAAAC,EAAW,wBAAAC,EAAyB,UAAAC,KAAkC,CAC3F,KAAM,CAAClB,EAASmB,CAAU,EAAId,WAAkB,EAAK,EAC/C,CAACe,EAAW,CAAC,UAAUC,CAAiB,CAAA,EAAIC,IAE5CC,EAAY,IAAMJ,EAAW,EAAI,EACjCK,EAAY,IAAML,EAAW,EAAK,EAElCX,EAAe,MAAOL,GAAgB,CACtC,GAAA,CACI,MAAAsB,EAAW,MAAML,EAAU,CAAC,IAAAjB,EAAS,aAAca,EAAqB,WAAYE,EAAoB,EAAE,OAAO,EAC/GT,EAAA,QAAQgB,EAAS,OAAO,EACtBD,IACcP,UACjBS,EAAY,CACnBC,EAAaD,CAAK,CAEpB,CAAA,EAQK,MAAA,CAAE,UAAAH,EAAW,kBAJjBb,MAAAX,EAAA,CAAS,QAAAC,EAAkB,SAAUwB,EAAW,SAAUhB,CAAc,CAAA,EAK7E"}