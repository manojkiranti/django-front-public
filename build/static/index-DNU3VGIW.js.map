{"version":3,"file":"index-DNU3VGIW.js","sources":["../../src/pages/loans/schema/index.ts","../../src/pages/loans/routes/PersonalLoan.tsx","../../src/pages/loans/routes/index.tsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const loanSchema = yup.object().shape({\n    accountNumber: yup\n    .string()\n    .required('Account number is required.'),\n  phone: yup.string().required('Mobile number is required.'),\n  accountName: yup.string().required('Account name is required.'),\n  email: yup.string().email().required('Email is required.'),\n  loanType: yup.string().required('Please select a loan type'),\n  loanAmount: yup.number().required('Loan amount is required.'),\n  paybackPeriod: yup.number().required('Payback period is required')\n});","import { useEffect, useState } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Container } from \"@/components/Elements\";\nimport { Button, Col, Row, message, Breadcrumb, Card, Dropdown, Space } from \"antd\";\n\nimport { InputField, SelectField } from \"@/components/Form\";\nimport { DownOutlined, HomeOutlined } from \"@ant-design/icons\";\nimport { useCustomerServiceRequestMutation } from \"@/store/apis/coreApi\";\nimport { displayError } from \"@/utils/displayMessageUtils\";\n\nimport { LoanFormType } from \"../types\";\nimport { loanSchema } from \"../schema\";\nimport { loanMenu } from \"../constant\";\nimport useOtpModal from \"@/hooks/useOtpModal\";\nimport { replaceHyphenWithUnderscore } from \"@/utils/commonUtils\";\nimport { error } from \"console\";\nconst siteKey = import.meta.env.VITE_CAPTCHA_SITE_KEY;\n\n\nconst PersonalLoan = () => {\n    const navigate = useNavigate();\n    const { loantype } = useParams<{ loantype: string }>();\n    const [messageApi, contextHolder] = message.useMessage();\n    const [captchaValue, setCaptchaValue] = useState<string | null>(null);\n    const [serviceId, setServiceId] = useState<string | null>(null);\n    const [serviceRefNumber, setServiceRefNumber] = useState<string | null>(null);\n    const [postCustomerRequest, { isLoading }] =\n    useCustomerServiceRequestMutation();\n    \n    const loanTitles: Record<string, string> = {\n        \"home-loan\": \"Home Loan\",\n        \"car-loan\": \"Car Loan\",\n        \"gold-loan\": \"Gold Loan\",\n        \"loan-against-share\": \"Loan Against Share\",\n        \"credit-card-loan\": \"Credit Card\"\n    };\n\n    const loanServiceTypes: Record<string, string> = {\n      \"home-loan\": \"HOME_LOAN\",\n      \"gold-loan\": \"GOLD_LOAN\",\n      \"loan-against-share\": \"LOAN_AGAINST_SHARE\",\n  };\n    \n  const {\n    control,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm<LoanFormType>({\n    defaultValues: {},\n    resolver: yupResolver(loanSchema),\n  });\n  console.log(errors)\n  useEffect(() => {\n    if(loantype) {\n        setValue(\"loanType\", loantype)\n    }   \n  },[loantype]);\n\n  const handleCaptchaChange = (value: string | null) => {\n    setCaptchaValue(value);\n  };\n\n  const onSubmit = (data: LoanFormType) => {\n    if (!captchaValue) {\n        messageApi.error(\"Please complete the reCAPTCHA to submit the form.\")\n        return;\n      }\n      postCustomerRequest({accountName: data.accountNumber, accountNumber: data.accountNumber, phone: data.phone,\n        prop_values:{...data}, product:'LOAN', service_type:loanServiceTypes[data.loanType]}).unwrap()\n      .then(response => {\n        setServiceId(response.data.service_type)\n        setServiceRefNumber(response.data.ref_number)\n        showOtpModal();\n      }).catch(err => {\n        displayError(err);\n      })\n  };\n  const handleServiceSubmission = () => {\n    navigate('/')\n  };\n\n  const { showModal: showOtpModal, OtpModalComponent } = useOtpModal({\n    serviceId: serviceId,\n    refNumber: serviceRefNumber,\n    handleServiceSubmission: handleServiceSubmission\n  });\n  return (\n    <>\n    {contextHolder}\n  \n      <Row>\n        <Col xs={24}>\n         <Card title={loanTitles[loantype || \"\"] || \"Loan\"}>\n             <form onSubmit={handleSubmit(onSubmit)}>\n                <Row gutter={30}>\n                  <Col xs={24} md={8}>\n                    <InputField\n                      label=\"Account Number\"\n                      name=\"accountNumber\"\n                      control={control}\n                      error={errors.accountNumber?.message ?? \"\"}\n                      placeholder=\"Enter your registered account number\"\n                      size=\"large\"\n                      required={true}\n                    />\n                  </Col>\n                  <Col xs={24} md={8}>\n                    <InputField\n                      label=\"Mobile Number\"\n                      name=\"phone\"\n                      control={control}\n                      error={errors.phone?.message ?? \"\"}\n                      placeholder=\"Enter you registered mobile number\"\n                      size=\"large\"\n                      required={true}\n                    />\n                  </Col>\n                  <Col xs={24} md={8}>\n                    <InputField\n                      label=\"Account Name\"\n                      name=\"accountName\"\n                      control={control}\n                      error={errors.accountName?.message ?? \"\"}\n                      placeholder=\"Account Name\"\n                      size=\"large\"\n                      required={true}\n                    />\n                  </Col>\n                  \n                  <Col xs={24} md={8}>\n                    <InputField\n                      label=\"Email\"\n                      name=\"email\"            \n                      control={control}\n                      error={errors.email?.message ?? \"\"}\n                      placeholder=\"Email\"\n                      size=\"large\"\n                      required={true}\n                    />\n                  </Col>\n                  <Col xs={24} md={8}>\n                    <SelectField\n                        options={[\n                            {label:\"Home Loan\", value:\"home-loan\"},\n                            {label:\"Gold Loan\", value:\"gold-loan\"},\n                            {label:\"Loan Against Share\", value:\"loan-against-share\"},\n                        ]}\n                        name=\"loanType\"\n                        control={control}\n                        label=\"Loan Type\"\n                        disabled={true}\n                        size=\"large\"\n                        placeholder=\"Select Loan Type\"\n                        error={errors.loanType?.message ?? ''}\n                        required={true}\n                    />\n                  </Col>\n\n                  <Col xs={24} md={8}>\n                    <InputField\n                      label=\"Loan Amount\"\n                      name=\"loanAmount\"            \n                      control={control}\n                      error={errors.loanAmount?.message ?? \"\"}\n                      placeholder=\"Loan Amount\"\n                      type=\"number\"\n                      size=\"large\"\n                      required={true}\n                    />\n                  </Col>\n\n                  <Col xs={24} md={8}>\n                    <InputField\n                      label=\"Payback Period(in Years)\"\n                      name=\"paybackPeriod\"            \n                      control={control}\n                      error={errors.paybackPeriod?.message ?? \"\"}\n                      placeholder=\"Payback Period\"\n                      type=\"number\"\n                      size=\"large\"\n                      required={true}\n                      suffix=\"yrs\"\n                    />\n                  </Col>\n                  \n                  <Col xs={24}>\n                    <ReCAPTCHA sitekey={siteKey} onChange={handleCaptchaChange} />\n                  </Col>\n                  \n                </Row>\n                <Col xs={24} style={{marginTop:\"1rem\"}}>\n                  <Button type=\"primary\" htmlType=\"submit\" size=\"large\" loading={isLoading} disabled={isLoading}>\n                    Submit\n                  </Button>\n                </Col>\n              </form>\n         </Card>\n             \n          \n        </Col>\n      </Row>\n  \n    {OtpModalComponent}\n    </>\n  );\n};\n\nexport default PersonalLoan;\n","import {\n  Navigate,\n  Route,\n  Routes,\n  useNavigate,\n  useLocation,\n} from \"react-router-dom\";\nimport { Col, Row, Tabs, Grid } from \"antd\";\nimport { loanServices } from \"@/pages/home/constant\";\nimport { Container } from \"@/components/Elements\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PersonalLoan from './PersonalLoan';\n\nconst {useBreakpoint} = Grid;\nexport const LoanRoutes = () => {\n  const screens = useBreakpoint();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleTabChange = (key: string) => {\n    navigate(key);\n  };\n  const activeKey =\n  loanServices.find((service) => location.pathname.endsWith(service.link))\n      ?.link || loanServices[0].link;\n  const tabPosition = screens.md ? \"left\" : \"top\";\n    return (\n      <Container>\n      <Row>\n        <Col xs={24} md={24}>\n          <Tabs\n            activeKey={activeKey}\n            tabPosition={tabPosition}\n            // style={{ height: \"calc(100vh - 520px)\" }}\n            onChange={handleTabChange}\n            items={loanServices.map(service => ({\n              label: (\n                <span>\n                  <FontAwesomeIcon icon={service.icon} style={{ marginRight: 8 }} />\n                  {service.title}\n                </span>\n              ),\n              key: service.link, // Use relative path as key\n              children:        <Routes>\n              <Route path=\":loantype\" element={<PersonalLoan />} />\n              <Route path=\"*\" element={<Navigate to={loanServices[0].link} replace />} />\n            </Routes>\n            }))}\n          />\n\n          {/* Define nested routes */}\n    \n        </Col>\n      </Row>\n    </Container>\n    \n    );\n  };"],"names":["loanSchema","yup.object","yup.string","yup.number","siteKey","PersonalLoan","navigate","useNavigate","loantype","useParams","messageApi","contextHolder","message","captchaValue","setCaptchaValue","useState","serviceId","setServiceId","serviceRefNumber","setServiceRefNumber","postCustomerRequest","isLoading","useCustomerServiceRequestMutation","loanTitles","loanServiceTypes","control","handleSubmit","setValue","errors","useForm","yupResolver","useEffect","handleCaptchaChange","value","onSubmit","data","response","showOtpModal","err","displayError","handleServiceSubmission","OtpModalComponent","useOtpModal","jsxs","Fragment","Row","jsx","Col","Card","InputField","SelectField","ReCAPTCHA","Button","useBreakpoint","Grid","LoanRoutes","screens","location","useLocation","handleTabChange","key","activeKey","loanServices","service","tabPosition","Container","Tabs","FontAwesomeIcon","Routes","Route","Navigate"],"mappings":"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"}